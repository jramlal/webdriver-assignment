/**
 * Data driven tests using data generated by faker.
 */

 const AccountPage = require('../pageobjects/account.page')
 const SignUpPage = require('../pageobjects/signup.page');
 const CheckoutPage = require('../pageobjects/checkout.page');
 const ProductPage = require('../pageobjects/product.page');
 const CartPage = require('../pageobjects/cart.page'); 
 const checkoutData = require('../data/checkoutData');
 const signUpData = require('../data/signUpData');
 
 describe.only('Luma Data Driven SignUp', () => {
     for(const record of signUpData){
         it(`should attempt to create an account for ${record.firstName}`, async () => {
         await SignUpPage.open();
         await SignUpPage.createAccount(record.firstName, record.lastName, record.email, record.password, record.confirmPassword);
         
         if(record.password.length < 8){
             await expect(browser).toHaveUrl(record.expectedUrl);
         } else {
             await expect(browser).toHaveUrl(record.expectedUrl);
             await AccountPage.logOut(); 
         }
 
         });
     }
 }) 
 
 describe.only('Luma Data Driven Checkout', () => {
     for(const record of checkoutData){
         it(`should attempt to purchase an item for ${record.firstName}`, async () => {
         await ProductPage.open();
         await ProductPage.AddToCart(); 
         
         await CartPage.openCart();
         await CartPage.btnProceedCheckout.click();
         
         await CheckoutPage.checkOut(record.email,record.firstName,record.lastName,record.company,record.streetAddress,record.city,record.state,record.zipCode,record.country,record.phoneNumber);
 
         await expect(browser).toHaveUrl(record.expectedUrl);
 
         });
     }
 })